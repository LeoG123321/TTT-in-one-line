#include <iostream>	

#include <iomanip>

using namespace std;int main(){Gameplay game;game.gameRun();return 0;}class Gameplay{private:Board board;public:Gameplay() {}void gameRun() {bool win = false;board.displayBoard();for (int i = 0; i < 9; i++) {if (i % 2 == 0){playerInput('X');}else{playerInput('O');}win = playerWin();if (win) {return;}}if (!win){cout << "Game Over: Draw" << endl;}}void playerInput(char input) {int num;tryAgain:cout << "Player " << input << ":" << endl;cout << "Choose Your Location" << endl;cin >> num;if (num > 0 && num < 10) {if (board.getCell(num) != 'X' && board.getCell(num) != 'O') {board.setCell(num, input);}else {cout << "Error, Location Already Taken. Try Again\n" << endl;goto tryAgain;}}else {if (num > 9) {cout << "Error, Location Input Greater Than '9'. Try Again\n" << endl;}else {cout << "Error, Location Input Less Than '1'. Try Again\n" << endl;}goto tryAgain;}board.displayBoard();}bool playerWin() {char winner;bool win = false;if (board.getCell(1) == board.getCell(2) && board.getCell(2) == board.getCell(3)) {win = true;winner = board.getCell(1);}else if (board.getCell(4) == board.getCell(5) && board.getCell(5) == board.getCell(6)) {win = true;winner = board.getCell(4);}else if (board.getCell(7) == board.getCell(8) && board.getCell(8) == board.getCell(9)) {win = true;winner = board.getCell(7);}else if (board.getCell(1) == board.getCell(5) && board.getCell(5) == board.getCell(9)) {win = true;winner = board.getCell(1);}else if (board.getCell(3) == board.getCell(5) && board.getCell(5) == board.getCell(7)) {win = true;winner = board.getCell(3);}else if (board.getCell(1) == board.getCell(4) && board.getCell(4) == board.getCell(7)) {win = true;winner = board.getCell(1);}else if (board.getCell(2) == board.getCell(5) && board.getCell(5) == board.getCell(8)) {win = true;winner = board.getCell(2);}else if (board.getCell(3) == board.getCell(6) && board.getCell(6) == board.getCell(9)) {win = true;winner = board.getCell(3);}if (win == true)cout << "Player " << winner << " Wins!" << endl;return win;}};class Board{private:char cells[10];public:Board() {cells[1] = '1';cells[2] = '2';cells[3] = '3';cells[4] = '4';cells[5] = '5';cells[6] = '6';cells[7] = '7';cells[8] = '8';cells[9] = '9';}void displayBoard() {cout << "\n";cout << setw(70) << " _______________________ \n";cout << setw(70) << "|       |       |       |\n";cout << setw(48) << "|   " << cells[1] << "   |   " << cells[2] << "   |   " << cells[3] << "   |\n";cout << setw(70) << "|_______|_______|_______|\n";cout << setw(70) << "|       |       |       |\n";cout << setw(48) << "|   " << cells[4] << "   |   " << cells[5] << "   |   " << cells[6] << "   |\n";cout << setw(70) << "|_______|_______|_______|\n";cout << setw(70) << "|       |       |       |\n";cout << setw(48) << "|   " << cells[7] << "   |   " << cells[8] << "   |   " << cells[9] << "   |\n";cout << setw(70) << "|_______|_______|_______|\n";cout << "\n";}char getCell(int cell) {return cells[cell];}void setCell(int cell, char num) {cells[cell] = num;}};